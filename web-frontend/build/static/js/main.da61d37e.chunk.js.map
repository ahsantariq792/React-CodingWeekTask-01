{"version":3,"sources":["components/Dashboard.js","components/Navbar.js","core.js","components/Signupform.js","components/LoginForm.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","className","id","localStorage","getItem","Navbar","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","mr","exact","to","Button","onClick","clear","baseurl","window","location","hostname","split","submit","values","resetForm","console","log","axios","post","name","email","phone","password","then","res","data","alert","validationSchema","yup","required","min","matches","max","Signupform","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","type","Loginform","history","useHistory","setItem","setTimeout","push","caption","Profile","useState","toggleGetUser","setToggleGetUser","profile","setProfile","useEffect","get","response","catch","err","map","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da61d37e.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../App.css\"\r\n\r\n\r\nfunction Dashboard(){\r\n    return(\r\n        <>\r\n        <div className=\"dashboard\">\r\n        <h1 id=\"wlm\">Welcome <span id=\"name\">{localStorage.getItem('name')}</span> </h1>\r\n\r\n        <h3>Personal Details</h3>\r\n        <h4>Email: {localStorage.getItem('email')}</h4>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard;","import React from \"react\";\r\nimport '../App.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nfunction Navbar() {\r\n\r\n    function logout(){\r\n        localStorage.clear()\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link className=\"item\" exact to=\"/\">Signup</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className=\"item\" to=\"/login\">Login</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div> */}\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                            sx={{ mr: 2 }}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Link className=\"item\" exact to=\"/\"><Button color=\"inherit\">Signup</Button></Link>\r\n                        <Link className=\"item\" to=\"/login\"><Button color=\"inherit\">Login</Button></Link>\r\n                        <Link className=\"item\" to=\"/profile\"><Button color=\"inherit\">Post</Button></Link>\r\n                        <Link className=\"item\" to=\"/login\" onClick={logout}><Button color=\"inherit\">Log out</Button></Link>\r\n\r\n                        {/* <Link className=\"item\" to=\"/dashboard\"><Button onClick={dashboard} color=\"inherit\">dashboard</Button></Link> */}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n\r\n\r\n        </>\r\n    );\r\n\r\n}\r\nexport default Navbar;","const dev = \"http://localhost:5000\"\r\nexport const baseurl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\nconst submit = (values,{ resetForm }) => {\r\n  console.log(\"values\", values)\r\n  axios.post(`${baseurl}/api/v1/signup`,\r\n  {\r\n    name: values.name,\r\n    email: values.email,\r\n    phone: values.phone,\r\n    password: values.password\r\n  \r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n    alert('User Signed in')\r\n    resetForm({})\r\n  })\r\n}\r\n\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n\r\n    phone: yup\r\n    .string('Enter your phone no.')\r\n    .matches(phoneRegExp, 'Phone number is not valid')\r\n    .min(11, 'Phone should contain 11 digits')\r\n    .max(11, 'Phone should contain 11 digits')\r\n    .required('phone number is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Signupform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n      phone:'',\r\n      password: ''\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\"> \r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Sign up Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"phone\"\r\n              label=\"phone\"\r\n              className=\"box\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signupform;","import '../App.css';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Loginform() {\r\n\r\n  let history = useHistory();\r\n\r\n  const submit = (values) => {\r\n    console.log(\"values\", values)\r\n    axios.post(`${baseurl}/api/v1/login`,\r\n      {\r\n        email: values.email,\r\n        password: values.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('name',res.data.name)\r\n        localStorage.setItem('email',res.data.email)\r\n        alert('User Logined')\r\n\r\n        if (res.data.email) {\r\n          setTimeout(() => {\r\n          history.push(\"/profile\")\r\n            \r\n          }, 2000);\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Login Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"box\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"box\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loginform;","import '../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    caption: yup\r\n        .string('Enter your password')\r\n        .min(4, 'Name should be of minimum 4 characters length')\r\n        .required('Name is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const [toggleGetUser, setToggleGetUser] = useState(false);\r\n\r\n    const [profile, setProfile] = useState([])\r\n    let history = useHistory();\r\n\r\n    const submit = (values, { resetForm }) => {\r\n\r\n        if (localStorage.getItem('name') && localStorage.getItem('email')) {\r\n            console.log(\"values\", values)\r\n            axios.post(`${baseurl}/api/v1/profile`,\r\n                {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    caption: values.caption,\r\n                    // password: values.password\r\n    \r\n                })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    resetForm({})\r\n                    setToggleGetUser(!toggleGetUser)\r\n                })\r\n        }\r\n    \r\n        else {\r\n            alert('You have to Login First')\r\n            console.log('you need to login')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.get(`${baseurl}/api/v1/profile`)\r\n            .then(response => {\r\n                console.log(response)\r\n                console.log(response.data)\r\n                setProfile(response.data)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n    }, [toggleGetUser])\r\n\r\n\r\n    // console.log(profile)\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: localStorage.getItem('name'),\r\n            email: localStorage.getItem('email'),\r\n            caption: '',\r\n\r\n        },\r\n        onSubmit: submit\r\n    },\r\n    );\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"post-main\">\r\n                    <form id=\"post-form\" onSubmit={formik.handleSubmit}>\r\n\r\n                        <h3> What's on Your Mind </h3>\r\n\r\n\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            name=\"caption\"\r\n                            label=\"post\"\r\n                            type=\"caption\"\r\n                            className=\"box\"\r\n\r\n                            value={formik.values.caption}\r\n                            onChange={formik.handleChange}\r\n\r\n\r\n                            error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                            helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                            variant=\"outlined\" />\r\n\r\n\r\n                        <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n                            Post\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div id=\"posts\">\r\n                    {profile?.map(profile => (\r\n                        <div id=\"cont\">\r\n                            <h3 id=\"post-name\">{profile.name}</h3>\r\n                            <hr/>\r\n                            <p id=\"post-item\">{profile.caption}</p>\r\n                            <p className=\"buttonbox\">\r\n                                <button className=\"btn\">Like</button>\r\n                                <button className=\"btn\">Comment</button>\r\n                                <button className=\"btn\">Share</button>\r\n                            </p>\r\n                        </div>\r\n                    )\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import './App.css';\nimport Navbar from './components/Navbar';\nimport Signup from './components/Signupform';\nimport Login from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/\">\n            <Signup />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}