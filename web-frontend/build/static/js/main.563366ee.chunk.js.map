{"version":3,"sources":["core.js","components/Signupform.js","components/LoginForm.js","components/Dashboard.js","components/Profile.js","components/SearchAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["baseurl","window","location","hostname","split","submit","values","resetForm","console","log","axios","post","name","email","phone","password","then","res","data","validationSchema","yup","required","min","matches","max","Signupform","formik","useFormik","initialValues","onSubmit","className","handleSubmit","TextField","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","variant","type","Button","color","Loginform","history","useHistory","localStorage","setItem","alert","setTimeout","push","Dashboard","getItem","caption","Profile","useState","toggleGetUser","setToggleGetUser","profile","setProfile","useEffect","get","response","catch","err","onClick","style","padding","map","SearchAppBar","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Nav","to","clear","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPACaA,EAAqD,cAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAD/C,wBAC0E,G,OCQhFC,EAAS,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UACvBC,QAAQC,IAAI,SAAUH,GACtBI,IAAMC,KAAN,UAAcX,EAAd,kBACA,CACEY,KAAMN,EAAOM,KACbC,MAAOP,EAAOO,MACdC,MAAOR,EAAOQ,MACdC,SAAUT,EAAOS,WAGlBC,MAAK,SAAAC,GACJT,QAAQC,IAAIQ,EAAIC,MAEhBX,EAAU,QAQRY,EAAmBC,IAAW,CAClCP,MAAOO,IACG,oBACPP,MAAM,uBACNQ,SAAS,qBACZT,KAAMQ,IACI,uBACPE,IAAI,EAAG,iDACPD,SAAS,oBAEVP,MAAOM,IACC,wBACPG,QAfe,0GAeM,6BACrBD,IAAI,GAAI,kCACRE,IAAI,GAAI,kCACRH,SAAS,4BAEZN,SAAUK,IACA,uBACPE,IAAI,EAAG,qDACPD,SAAS,0BAwGCI,MAhGf,WAEE,IAAMC,EAASC,YAAU,CACvBR,iBAAkBA,EAClBS,cAAe,CACbf,MAAO,GACPD,KAAM,GACNE,MAAM,GACNC,SAAU,IAGZc,SAAUxB,IAKZ,OACE,mCACE,qBAAKyB,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAf,SACE,uBAAMD,SAAUH,EAAOK,aAAvB,UAEE,gDAEA,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,OACLsB,MAAM,OACNJ,UAAU,WAEVK,MAAOT,EAAOpB,OAAOM,KACrBwB,SAAUV,EAAOW,aAGjBC,MAAOZ,EAAOa,QAAQ3B,MAAQ4B,QAAQd,EAAOe,OAAO7B,MACpD8B,WAAYhB,EAAOa,QAAQ3B,MAAQc,EAAOe,OAAO7B,KAEjD+B,QAAQ,aAGV,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,QACLsB,MAAM,QACNJ,UAAU,WACVK,MAAOT,EAAOpB,OAAOO,MACrBuB,SAAUV,EAAOW,aAEjBC,MAAOZ,EAAOa,QAAQ1B,OAAS2B,QAAQd,EAAOe,OAAO5B,OACrD6B,WAAYhB,EAAOa,QAAQ1B,OAASa,EAAOe,OAAO5B,MAGlD8B,QAAQ,aAEV,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,QACLsB,MAAM,QACNJ,UAAU,WACVK,MAAOT,EAAOpB,OAAOQ,MACrBsB,SAAUV,EAAOW,aAEjBC,MAAOZ,EAAOa,QAAQzB,OAAS0B,QAAQd,EAAOe,OAAO3B,OACrD4B,WAAYhB,EAAOa,QAAQzB,OAASY,EAAOe,OAAO3B,MAGlD6B,QAAQ,aAGV,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,WACLsB,MAAM,WACNU,KAAK,WACLd,UAAU,WAEVK,MAAOT,EAAOpB,OAAOS,SACrBqB,SAAUV,EAAOW,aAGjBC,MAAOZ,EAAOa,QAAQxB,UAAYyB,QAAQd,EAAOe,OAAO1B,UACxD2B,WAAYhB,EAAOa,QAAQxB,UAAYW,EAAOe,OAAO1B,SAErD4B,QAAQ,aAGV,cAACE,EAAA,EAAD,CAAQZ,GAAG,MAAMU,QAAQ,YAAYG,MAAM,UAAUF,KAAK,SAA1D,8B,QCrINzB,EAAmBC,IAAW,CAClCP,MAAOO,IACG,oBACPP,MAAM,uBACNQ,SAAS,qBAEZN,SAAUK,IACA,uBACPE,IAAI,EAAG,qDACPD,SAAS,0BAoGC0B,MA7Ff,WAEE,IAAIC,EAAUC,cA8BRvB,EAASC,YAAU,CACvBR,iBAAkBA,EAClBS,cAAe,CACbf,MAAO,GACPE,SAAU,IAGZc,SAnCa,SAACvB,GACdE,QAAQC,IAAI,SAAUH,GACtBI,IAAMC,KAAN,UAAcX,EAAd,iBACE,CACEa,MAAOP,EAAOO,MACdE,SAAUT,EAAOS,WAElBC,MAAK,SAAAC,GACJT,QAAQC,IAAIQ,EAAIC,MAChBgC,aAAaC,QAAQ,OAAOlC,EAAIC,KAAKN,MACrCsC,aAAaC,QAAQ,QAAQlC,EAAIC,KAAKL,OACtCqC,aAAaC,QAAQ,QAAQlC,EAAIC,KAAKJ,OACtCsC,MAAM,gBAEFnC,EAAIC,KAAKL,OACXwC,YAAW,WACXL,EAAQM,KAAK,cAEV,WAsBX,OACE,mCACE,qBAAKxB,UAAU,WAAf,SACE,qBAAKA,UAAU,OAAf,SACE,uBAAMD,SAAUH,EAAOK,aAAvB,UAEE,8CAEA,cAACC,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,QACLsB,MAAM,QACNJ,UAAU,WACVK,MAAOT,EAAOpB,OAAOO,MACrBuB,SAAUV,EAAOW,aAEjBC,MAAOZ,EAAOa,QAAQ1B,OAAS2B,QAAQd,EAAOe,OAAO5B,OACrD6B,WAAYhB,EAAOa,QAAQ1B,OAASa,EAAOe,OAAO5B,MAGlD8B,QAAQ,aAEV,cAACX,EAAA,EAAD,CACEC,GAAG,iBACHrB,KAAK,WACLsB,MAAM,WACNU,KAAK,WACLd,UAAU,WAEVK,MAAOT,EAAOpB,OAAOS,SACrBqB,SAAUV,EAAOW,aAGjBC,MAAOZ,EAAOa,QAAQxB,UAAYyB,QAAQd,EAAOe,OAAO1B,UACxD2B,WAAYhB,EAAOa,QAAQxB,UAAYW,EAAOe,OAAO1B,SAErD4B,QAAQ,aAGV,cAACE,EAAA,EAAD,CAAQZ,GAAG,MAAMU,QAAQ,YAAYG,MAAM,UAAUF,KAAK,SAA1D,8BCrFGW,MApBf,WACI,OACI,mCACI,sBAAKzB,UAAU,YAAf,UACI,oBAAIG,GAAG,MAAP,uCACA,uBACA,oBAAIA,GAAG,cAAP,8BACA,uBAAM,uBACN,sBAAKH,UAAU,OAAf,UACI,wCAAWoB,aAAaM,QAAQ,WAChC,yCAAYN,aAAaM,QAAQ,YACjC,gDAAmBN,aAAaM,QAAQ,qB,cCHtDrC,EAAmBC,IAAW,CAChCqC,QAASrC,IACG,uBACPE,IAAI,EAAG,iDACPD,SAAS,sBA4IHqC,MApIf,WAAoB,IAAD,EAEf,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACIf,EAAUC,cA+Bde,qBAAU,WAEFd,aAAaM,QAAQ,SAAWN,aAAaM,QAAQ,SAEzD9C,IAAMuD,IAAN,UAAajE,EAAb,oBACKgB,MAAK,SAAAkD,GACF1D,QAAQC,IAAIyD,GACZ1D,QAAQC,IAAIyD,EAAShD,MACrB6C,EAAWG,EAAShD,SAEvBiD,OAAM,SAAAC,GAAG,OAAIhB,MAAM,6BAGpBA,MAAM,eACNJ,EAAQM,KAAK,aAElB,CAACM,IAKJ,IAAMlC,EAASC,YAAU,CACrBR,iBAAkBA,EAClBS,cAAe,CACXhB,KAAMsC,aAAaM,QAAQ,QAC3B3C,MAAOqC,aAAaM,QAAQ,SAC5BC,QAAS,IAGb5B,SA1DW,SAACvB,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAElB2C,aAAaM,QAAQ,SAAWN,aAAaM,QAAQ,UACrDhD,QAAQC,IAAI,SAAUH,GACtBI,IAAMC,KAAN,UAAcX,EAAd,mBACI,CACIY,KAAMN,EAAOM,KACbC,MAAOP,EAAOO,MACd4C,QAASnD,EAAOmD,UAInBzC,MAAK,SAAAC,GACFT,QAAQC,IAAIQ,EAAIC,MAChBX,EAAU,IACVsD,GAAkBD,QAK1BR,MAAM,2BACN5C,QAAQC,IAAI,qBACZuC,EAAQM,KAAK,cA4CrB,OACI,mCACI,sBAAKxB,UAAU,WAAf,UACI,sBAAKA,UAAU,YAAf,yBAEI,wBAAQA,UAAU,UAAUuC,QAT5C,WACIrB,EAAQM,KAAK,eAQD,uBACA,uBAAMrB,GAAG,YAAYJ,SAAUH,EAAOK,aAAtC,UAEI,oBAAIuC,MAAO,CAACC,QAAQ,MAApB,mCAGA,cAACvC,EAAA,GAAD,GACIC,GAAG,iBACHrB,KAAK,UACLsB,MAAM,OACNU,KAAK,UACLd,UAAU,OALd,mBAMO,WANP,sBAQWJ,EAAOpB,OAAOmD,SARzB,yBASc/B,EAAOW,cATrB,sBAYWX,EAAOa,QAAQkB,SAAWjB,QAAQd,EAAOe,OAAOgB,UAZ3D,2BAagB/B,EAAOa,QAAQkB,SAAW/B,EAAOe,OAAOgB,SAbxD,wBAeY,YAfZ,IAkBA,cAACZ,EAAA,EAAD,CAAQZ,GAAG,MAAMU,QAAQ,YAAYG,MAAM,UAAUF,KAAK,SAA1D,wBAMR,qBAAKX,GAAG,QAAR,gBACK6B,QADL,IACKA,OADL,EACKA,EAASU,KAAI,SAAAV,GAAO,OACjB,sBAAK7B,GAAG,OAAR,UACI,oBAAIA,GAAG,YAAP,SAAoB6B,EAAQlD,OAC5B,uBACA,mBAAGqB,GAAG,YAAN,SAAmB6B,EAAQL,UAC3B,oBAAG3B,UAAU,YAAb,UACI,wBAAQA,UAAU,MAAlB,kBACA,wBAAQA,UAAU,MAAlB,qBACA,wBAAQA,UAAU,MAAlB,oC,4CCxFjB2C,MAjDf,WAYI,OACI,mCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAA5B,SACI,eAACC,EAAA,EAAD,WACI,cAACH,EAAA,EAAOI,MAAR,CAAchD,UAAU,WAAxB,wBACA,cAAC4C,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,cAACL,EAAA,EAAOM,SAAR,CAAiB/C,GAAG,mBAApB,SACI,eAACgD,EAAA,EAAD,CAAKnD,UAAU,UAAf,UAEI,6BACI,cAAC,IAAD,CAAMoD,GAAG,IAAIpD,UAAU,WAAvB,sBAGJ,6BACI,cAAC,IAAD,CAAMoD,GAAG,SAASpD,UAAU,WAA5B,qBAGJ,6BACI,cAAC,IAAD,CAAMoD,GAAG,WAAWpD,UAAU,WAA9B,uBAOJ,6BACI,cAAC,IAAD,CAAMuC,QApClC,WACOnB,aAAaM,QAAQ,SACpBN,aAAaiC,QACb/B,MAAM,YAGNA,MAAM,gBA8BqC8B,GAAG,SAASpD,UAAU,WAA7C,mCCPjBsD,MAxBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,eChBGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.563366ee.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\"\r\nexport const baseurl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";","import '../App.css';\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\nconst submit = (values,{ resetForm }) => {\r\n  console.log(\"values\", values)\r\n  axios.post(`${baseurl}/api/v1/signup`,\r\n  {\r\n    name: values.name,\r\n    email: values.email,\r\n    phone: values.phone,\r\n    password: values.password\r\n  \r\n  })\r\n  .then(res => {\r\n    console.log(res.data);\r\n    // alert('User Signed in')\r\n    resetForm({})\r\n  })\r\n}\r\n\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  name: yup\r\n    .string('Enter your password')\r\n    .min(4, 'Name should be of minimum 4 characters length')\r\n    .required('Name is required'),\r\n\r\n    phone: yup\r\n    .string('Enter your phone no.')\r\n    .matches(phoneRegExp, 'Phone number is not valid')\r\n    .min(11, 'Phone should contain 11 digits')\r\n    .max(11, 'Phone should contain 11 digits')\r\n    .required('phone number is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Signupform() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      name: '',\r\n      phone:'',\r\n      password: ''\r\n     \r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-main\"> \r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Sign up Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"name\"\r\n              label=\"name\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.name && Boolean(formik.errors.name)}\r\n              helperText={formik.touched.name && formik.errors.name}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"inputbox\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"phone\"\r\n              label=\"phone\"\r\n              className=\"inputbox\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.phone && Boolean(formik.errors.phone)}\r\n              helperText={formik.touched.phone && formik.errors.phone}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Signupform;","import '../App.css';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Loginform() {\r\n\r\n  let history = useHistory();\r\n\r\n  const submit = (values) => {\r\n    console.log(\"values\", values)\r\n    axios.post(`${baseurl}/api/v1/login`,\r\n      {\r\n        email: values.email,\r\n        password: values.password\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        localStorage.setItem('name',res.data.name)\r\n        localStorage.setItem('email',res.data.email)\r\n        localStorage.setItem('phone',res.data.phone)\r\n        alert('User Logined')\r\n\r\n        if (res.data.email) {\r\n          setTimeout(() => {\r\n          history.push(\"/profile\")\r\n            \r\n          }, 2000);\r\n        }\r\n\r\n        \r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: submit\r\n  },\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-main\">\r\n        <div className=\"main\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n\r\n            <h3> Login Form </h3>\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"email\"\r\n              label=\"email\"\r\n              className=\"inputbox\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n\r\n\r\n              variant=\"outlined\" />\r\n\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              name=\"password\"\r\n              label=\"password\"\r\n              type=\"password\"\r\n              className=\"inputbox\"\r\n\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n\r\n\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n\r\n              variant=\"outlined\" />\r\n\r\n\r\n            <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loginform;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../App.css\"\r\n\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <>\r\n            <div className=\"dashboard\">\r\n                <h1 id=\"wlm\">Welcome To Dash Board !! </h1>\r\n                <br />\r\n                <h2 id=\"personaldtl\">Personal Details</h2>\r\n                <br /><br />\r\n                <div className=\"info\">\r\n                    <h3>Name: {localStorage.getItem('name')}</h3>\r\n                    <h4>Email: {localStorage.getItem('email')}</h4>\r\n                    <h4>Phone Number: {localStorage.getItem('phone')}</h4>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Dashboard;\r\n\r\n","import '../App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { baseurl } from '../core';\r\n\r\n\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    caption: yup\r\n        .string('Enter your password')\r\n        .min(4, 'Name should be of minimum 4 characters length')\r\n        .required('Name is required'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const [toggleGetUser, setToggleGetUser] = useState(false);\r\n\r\n    const [profile, setProfile] = useState([])\r\n    let history = useHistory();\r\n\r\n    const submit = (values, { resetForm }) => {\r\n\r\n        if (localStorage.getItem('name') && localStorage.getItem('email')) {\r\n            console.log(\"values\", values)\r\n            axios.post(`${baseurl}/api/v1/profile`,\r\n                {\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    caption: values.caption,\r\n                    // password: values.password\r\n    \r\n                })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    resetForm({})\r\n                    setToggleGetUser(!toggleGetUser)\r\n                })\r\n        }\r\n    \r\n        else {\r\n            alert('You have to Login First')\r\n            console.log('you need to login')\r\n            history.push('/login')\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        if (localStorage.getItem('name') && localStorage.getItem('email')) {\r\n\r\n        axios.get(`${baseurl}/api/v1/profile`)\r\n            .then(response => {\r\n                console.log(response)\r\n                console.log(response.data)\r\n                setProfile(response.data)\r\n            })\r\n            .catch(err => alert(\"Error in getting data\"))\r\n        }\r\n        else{\r\n            alert(\"Login First\")\r\n            history.push('/login')\r\n        }\r\n    }, [toggleGetUser])\r\n\r\n\r\n    // console.log(profile)\r\n\r\n    const formik = useFormik({\r\n        validationSchema: validationSchema,\r\n        initialValues: {\r\n            name: localStorage.getItem('name'),\r\n            email: localStorage.getItem('email'),\r\n            caption: '',\r\n\r\n        },\r\n        onSubmit: submit\r\n    },\r\n    );\r\n\r\n    function dash(){\r\n        history.push(\"/dashboard\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"app-main\">\r\n                <div className=\"post-main\">\r\n                    Your Profile \r\n                    <button className=\"dashbtn\" onClick={dash}>Dashboard</button>\r\n                    <form id=\"post-form\" onSubmit={formik.handleSubmit}>\r\n\r\n                        <h3 style={{padding:\"5%\"}}> What's on Your Mind </h3>\r\n\r\n\r\n                        <TextField\r\n                            id=\"outlined-basic\"\r\n                            name=\"caption\"\r\n                            label=\"post\"\r\n                            type=\"caption\"\r\n                            className=\"box\"\r\n                            id=\"postbox\"\r\n\r\n                            value={formik.values.caption}\r\n                            onChange={formik.handleChange}\r\n\r\n\r\n                            error={formik.touched.caption && Boolean(formik.errors.caption)}\r\n                            helperText={formik.touched.caption && formik.errors.caption}\r\n\r\n                            variant=\"outlined\" />\r\n\r\n\r\n                        <Button id=\"btn\" variant=\"contained\" color=\"success\" type=\"submit\">\r\n                            Post\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div id=\"posts\">\r\n                    {profile?.map(profile => (\r\n                        <div id=\"cont\">\r\n                            <h3 id=\"post-name\">{profile.name}</h3>\r\n                            <hr/>\r\n                            <p id=\"post-item\">{profile.caption}</p>\r\n                            <p className=\"buttonbox\">\r\n                                <button className=\"btn\">Like</button>\r\n                                <button className=\"btn\">Comment</button>\r\n                                <button className=\"btn\">Share</button>\r\n                            </p>\r\n                        </div>\r\n                    )\r\n\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchAppBar() {\r\n\r\n    function logout(){\r\n        if(localStorage.getItem('name')){\r\n            localStorage.clear()\r\n            alert('log out')\r\n        }\r\n        else{\r\n            alert(\"Login First\")\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar bg=\"success\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"nav-main\">React-Form</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"me-auto\">\r\n\r\n                            <li>\r\n                                <Link to=\"/\" className=\"nav-itms\">Signin</Link>\r\n                            </li>\r\n                           \r\n                            <li>\r\n                                <Link to=\"/login\" className=\"nav-itms\">Login</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/profile\" className=\"nav-itms\">Profile</Link>\r\n                            </li>\r\n\r\n                            {/* <li>\r\n                                <Link to=\"/dashboard\" className=\"nav-itms\">Dashboard</Link>\r\n                            </li> */}\r\n\r\n                            <li>\r\n                                <Link onClick={logout} to=\"/login\" className=\"nav-itms\">Logout</Link>\r\n                            </li>\r\n                            \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchAppBar;","import './App.css';\nimport Signup from './components/Signupform';\nimport Login from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\nimport SearchAppBar from './components/SearchAppBar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <SearchAppBar />\n        <Switch>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/\">\n            <Signup />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}